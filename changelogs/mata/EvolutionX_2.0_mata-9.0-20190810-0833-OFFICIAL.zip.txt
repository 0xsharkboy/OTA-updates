=======================
     08-10-2019
=======================


   * device/essential/mata/
18e6a500 mata: Evolution X BringUp

   * frameworks/base/
07ccedc11c2 Automatic translation import
6e0f58ae3a5 QS: Navigation Bar tile
a8ab394b993 Switch widgets away from android.text.format.Time
85d732f85b0 Migrate telephony code away from Time
6a5387f6cfd Remove unused class
2a08be52522 Remove unnecessary usage of deprecated Time class
44e9cafb967 Add a basic benchmark for android.text.format.Time
d71584e536f Avoid use of DateUtilsBridge.icuTimeZone()
0f350e53e9d Camera: Force HAL1 for predefined package list.
e4a9244cf2e Revert "Camera: Force HAL1 for predefined package list."
328513cdec6 [SQUASH] Bring back working combined double tap to sleep gestures
8ce02a3a3a9 TypographicClock: Tint top row with wallpaper primary color
b135447e771 Revert "Q Style Clock: Animate change in time."

   * frameworks/native/
9496aaea6 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/frameworks/native into pie
5710903d2 SF : Map metadata before accessing value.
0e9ff8835 SF: Add support for 64 bit consumer usage flag
c5ac1b4e2 SurfaceFlinger: Combine SF Refactor changes.
41d0ea0b9 media: Add support for level 6-6.2 for AVC

   * packages/apps/Evolution/
387a905 Automatic translation import

   * packages/apps/Settings/
02d53d9d00 Automatic translation import

   * packages/apps/Updates/
bfc21a9 Automatic translation import
5abd85b Updates: Rebase for Evolution X

   * vendor/aosp/
99aec5cf [Generate JSON Info] Make the generator suit the current OTA system needs

   * vendor/pixelstyle/
9ca12e2 Fonts: Add and update even more fonts

=======================
     08-09-2019
=======================


   * packages/apps/Evolution/
7a8155a Evolution: Rework QS alpha slider
3089a22 qs-alpha: Fix lockup when changing qs

   * packages/apps/Settings/
123fdc278a Settings: Use new add icon button for bluetooth preferences
618beb5d28 Settings: Use Q battery icon in battery usage screen
c6fcf458e2 Settings: Show full proc/version information
4c1a6647bd Add device model on about phone Build number preference
c5b0b3ea3b Introduce EvolutionVersionDetailPreferenceController
4f6aeebdc5 Introduce MainlineModuleVersionPreferenceController
d1bb54dace Introduce SimpleBuildNumberPreferenceController
1587fd4bb1 Introduce KernelVersionPreferenceController
a8dd66a1ae Introduce BasebandVersionPreferenceController
6eb4289c23 Introduce SecurityPatchLevelPreferenceController
ac0f0c9001 Introduce FirmwareVersionDetailPreferenceController
a6a18dc9bf Introduce FirmwareVersionSettings

   * vendor/aosp/
eeca729d vendor: branding: Update version prop to show Evolution X version

=======================
     08-08-2019
=======================


   * packages/apps/SmartNavSettings/
e363ba5 Automatic translation import

=======================
     08-07-2019
=======================


   * frameworks/base/
bb3376a4f3e SystemUI: Use appropriate function when trying to retrieve colorError
e4ac3d02c85 NexusLauncherPrebuilt needs setShelfHeight, remove the permissions check, because seriously who gives a fuck
c6ba4aacc94 SystemUI: fix constant FC on certain devices

   * hardware/qcom/audio-caf/msm8916/
e3e1198 hal: Always build msim voice extension
6a8311c hal: msim_voice_extn: Set msim_phone based on phone_type parameter
63e919c hal: msim_voice_extn: Use an enum for keeping track of the current SIM
1c7f781 hal: Add support for Samsung dual-SIM implementation

   * kernel/essential/msm8998/
e08851328051 Revert "PM / QoS: Fix memory leak on resume_latency.notifiers"

   * manifest/
3c8fa31 manifest: Track more repos

   * packages/apps/Settings/
8f88229502 Fix duplicate onPause after r46 merge
3ee9654d33 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/packages/apps/Settings into pie

   * vendor/nxp/opensource/commonsys/packages/apps/Nfc/
524414fb Skip setEnableHostRouting when switching to screen off

   * vendor/qcom/opensource/audio/
36f37fd AudioPolicyManager: fix build after r46 merge

=======================
     08-06-2019
=======================

   * art/
0ef4604f57 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/art into pie

   * build/make/
e4f33be4e Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/build into pie

   * frameworks/av/
14f7b47af Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/frameworks/av into pie

   * frameworks/base/
f07e0419c21 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/frameworks/base into pie
26acbade9da Automatic translation import

   * kernel/essential/msm8998/
3207488e7beb Merge tag 'LA.UM.7.2.r1-07400-sdm660.0' of https://source.codeaurora.org/quic/la/kernel/msm-4.4 into locking
ab18d5cff28c Revert "Revert "msm: mdss: hdmi: skip pan_display during handoff""
6393dabd2f92 FROMLIST: sched/fair: Update blocked load from newly idle balance
05d036903778 sched/fair: Fix fairness issue on migration
57aa7e73b12c sched/core: Kill sched_class::task_waking to clean up the migration logic
3bfae38619d7 sched/core: Fix remote wakeups
17db83e9d737 sched/fair: Prepare to fix fairness problems on migration
e23cc3713907 Revert "sched: ignore task_h_load for CPU_NEWLY_IDLE"
8c067e2edb8c Revert "sched: set loop_max after rq lock is taken"
95500b323429 Revert "sched: check pinned tasks before balance"
31a2df77b46a Revert "sched: set number of iterations to h_nr_running"

   * manifest/
6ff4ae5 Merge branch 'android-9.0.0_r46' of https://android.googlesource.com/platform/manifest into pie
ee59eca Manifest for Android 9.0.0 Release 46 (PQ3A.190801.002)

   * packages/apps/Bluetooth/
4a46c9fe Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/packages/apps/Bluetooth into pie
49157329 Fix null pointer exception on AvrcpTargetService
187afa03 Assume optional codecs are supported if were supported previously
488314eb SBC Dual Channel (SBC HD Audio) support

   * packages/apps/Nfc/
3f52e9a7 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/packages/apps/Nfc into pie

   * packages/services/Telecomm/
85332576 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/packages/services/Telecomm into pie

   * system/bt/
c9ee8ad28 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/system/bt into HEAD

   * system/libhidl/
fff8319 Merge tag 'android-9.0.0_r46' of https://android.googlesource.com/platform/system/libhidl into HEAD

   * vendor/aosp/
1eed36e1 vendor: Add vendor.lineage.biometrics.fingerprint.inscreen permission

=======================
     08-05-2019
=======================


   * build/make/
ac86b07c6 fix "build: Only set the default verity key as a fallback"
9138bf49c build: Only set the default verity key as a fallback
9cab94c31 make: Use build prop overrides when generating vendor build.prop too

   * frameworks/base/
28259a5eaab Fix type header clock strings for Q Clock
ed1909a3ad2 Fix property setting with failure
62aae2d5eba Check if EIMS when confirming network
cbe4abcbea5 null check before accessing getCurrentScore()
6f40f0fb22c net: modify connecitvity rematch logic to support MSIM devices
4bda9ebbcdc Use proper coded alphabet when a contact is written into EF_ADN of USIM.
54051ce097b Add config to disable CDMA call forward/waiting
67b2805f707 SMS: Parsing of CDMA MMS notification carried by SMS
24a6f8979b7 BT: Send info if call is CS type from telecomm service to BT apps.
1d33b8ab8df Emergency SMS carrier config flag
220bb08fd66 Add ICCID into CarrierIdentifier
730710eee58 frameworks/base: Add HDMI hotplug handling
e05115c48b8 CamcorderProfile: Add 1440p camcorder profile
4c4b35f7117 CamcorderProfiles: Add new profiles for recorder
c41dec19155 BT: Adding aptX-Adaptive codec entry to Framework
f1d191996c1 Wallpaper is half black after rotating quickly
805772eb1c3 GamingMode: Clean up for dynamic mode

   * kernel/essential/msm8998/
80bf16c62864 lib: refcount: Replace smp_acquire__after_ctrl_dep() with smp_rmb()
31a1017d3d2a locking/spinlocks/arm64: Remove smp_mb() from arch_spin_is_locked()
28308efec8a1 arm64: spinlock: Ensure forward-progress in spin_unlock_wait
9f7aadaff6fc arm64: spinlock: order spin_{is_locked,unlock_wait} against local locks
eb7151b113e6 include: list: Import list_cut_before()
4a1df7369144 locking/mutex: Test for initialized mutex
7f3e2b8573e4 locking/lockdep: Hide unused 'class' variable
33b4b0948351 locking/lockdep: Fix lock used or unused stats error
9ac270d3e8cb locking/lockdep: Fix merging of hlocks with non-zero references
e1327cda2b9c locking/lockdep: Fix OOO unlock when hlocks need merging
0109d54526f1 locking/lockdep: Don't complain about incorrect name for no validate class
bb5528a676d1 locking/rwsem: Prevent decrement of reader count before increment
5b8828a7195b locking/lockdep: Remove unnecessary unlikely()
63584ee7aea8 locking/lockdep: Avoid a Clang warning
5672fa797f09 refcount_t: Add ACQUIRE ordering on success for dec(sub)_and_test() variants
a023c7f4774e locking/refcount: Always allow checked forms
418ca645a514 locking/refcounts: Include fewer headers in <linux/refcount.h>
d1c7647b12d8 locking/refcounts: Implement refcount_dec_and_lock_irqsave()
79e3c018ec2e docs: refcount_t documentation
c2cacc978547 locking/refcount: Remove the half-implemented refcount_sub() API
0180c246a97d locking/refcount: Create unchecked atomic_t implementation
d1ed2792aadf refcount: change EXPORT_SYMBOL markings
70755e31913d locking/refcounts: Use atomic_try_cmpxchg()
77df2b84787e locking/refcounts: Change WARN() to WARN_ONCE()
415e378db41b locking/refcount: Add refcount_t API kernel-doc comments
5926d7649140 locking/refcounts: Add missing kernel.h header to have UINT_MAX defined
e3214d89e64c locking/refcounts: Out-of-line everything
c55132564eac refcount_t: Introduce a special purpose refcount type
d7279e5ef0f4 Revert "rcu: Suppress lockdep false-positive ->boost_mtx complaints"
660f06660823 locking/lockdep: Add module_param to enable consistency checks
a2528f01a443 locking/lockdep: Verify whether lock objects are small enough to be used as class keys
a6343857a2ee locking/lockdep: Check data structure consistency
6dce730612df locking/lockdep: Reuse lock chains that have been freed
4e91d6defa20 locking/lockdep: Fix a comment in add_chain_cache()
f823c58cf3a9 locking/lockdep: Introduce lockdep_next_lockchain() and lock_chain_count()
9328c2f88c64 locking/lockdep: Reuse list entries that are no longer in use
39247330e293 locking/lockdep: Free lock classes that are no longer in use
475b26ff20eb locking/lockdep: Make it easy to detect whether or not inside a selftest
38c1c9a09ad7 locking/lockdep: Split lockdep_free_key_range() and lockdep_reset_lock()
56f829a43691 locking/lockdep: Initialize the locks_before and locks_after lists earlier
e9cbfdd828cf locking/lockdep: Make zap_class() remove all matching lock order entries
fa7fc63d68e2 locking/lockdep: Avoid that add_chain_cache() adds an invalid chain to the cache
a4544e09a261 locking/lockdep: Fix reported required memory size (2/2)
14ac574b795b locking/lockdep: Fix reported required memory size (1/2)
37d342dd3b88 locking/lockdep: Fix two 32-bit compiler warnings
f824dbb54e23 locking/qspinlock: Remove unnecessary BUG_ON() call
36c7f6f76287 futex: Handle early deadlock return correctly
a7da218637bf locking/qspinlock_stat: Track the no MCS node available case
ec1e927478db locking/qspinlock: Handle > 4 slowpath nesting levels
e47c856b3c16 futex: Consolidate duplicated timer setup code
e4c4e819a272 locking/futex: Allow low-level atomic operations to return -EAGAIN
39612620dbb1 futex: Convert futex_pi_state.refcount to refcount_t
7edfb59a5dc3 futex: Fix barrier comment
d2b88317d685 sched/wake_q: Reduce reference counting for special users
556033d01857 futex: No need to check return value of debugfs_create functions
02ba6efa1395 futex: Fix (possible) missed wakeup
8261c0a3f9b5 futex: Cure exit race
5305ccc70b24 futex: Replace spin_is_locked() with lockdep
6e597926ad71 futex: Mark expected switch fall-throughs
76a810ae65bb futex: Fix OWNER_DEAD fixup
0aa9f0bdc033 futex: Prevent overflow by strengthen input validation
5d3ad230a8ed futex: futex_wake_op, do not fail on invalid op
5ae047f9cd94 futex: Fix more put_pi_state() vs. exit_pi_state_list() races
93d8906a3e62 futex: Fix pi_state->owner serialization
331df9caabe9 futex: Clarify mark_wake_futex memory barrier usage
ae8c273acfc9 futex: Fix small (and harmless looking) inconsistencies
4a6f774a8d8d futex: Avoid freeing an active timer
6871c2fbc6e3 [FIXUP]futex: Drop hb->lock before enqueueing on the rtmutex
a87af8baecb0 futex: Futex_unlock_pi() determinism
f446c6f575c6 locking/lockdep: Add debug_locks check in __lock_downgrade()
02e7d3c3c7c2 locking/lockdep: Provide enum lock_usage_bit mask names
dabdc24558e3 locking/lockdep: Simplify mark_held_locks()
c4b03d556121 locking/lockdep: Add debug_locks check in __lock_downgrade()
1b83a7c1b1a2 locking/rwsem: Fix (possible) missed wakeup
ee39260e9985 kernel/locking/mutex.c: remove caller signal_pending branch predictions
a06e8240667a locking/lockdep: Stop using RCU primitives to access 'all_lock_classes'
6cd073579788 locking/lockdep: Make concurrent lockdep_reset_lock() calls safe
5fd547b9b3a6 locking/lockdep: Remove a superfluous INIT_LIST_HEAD() statement
ce15d7ff3bc2 locking/lockdep: Introduce lock_class_cache_is_registered()
c7534c7dabcd locking/lockdep: Inline __lockdep_init_map()
666d9a2a154d locking/lockdep: Declare local symbols static
59b588ac009d locking/mutex: Replace spin_is_locked() with lockdep
47dd51963567 locking/pvqspinlock: Extend node size when pvqspinlock is configured
4d48edffa7da locking/qspinlock_stat: Count instances of nested lock slowpaths
325934ba6881 locking/qspinlock: Provide liveness guarantee
793f67ddb3b2 locking/qspinlock: Rework some comments
ecca923ad8b5 locking/qspinlock: Re-order code
812495122f12 locking/lockdep: Remove duplicated 'lock_class_ops' percpu array
5e27d3ff9fa9 locking/lockdep: Make class->ops a percpu counter and move it under CONFIG_DEBUG_LOCKDEP=y
e7c0bf2d4665 locking/lockdep: Add a faster path in __lock_release()
c54fb62b3735 locking/lockdep: Eliminate redundant IRQs check in __lock_acquire()
ba8ea630901f locking/lockdep: Remove add_chain_cache_classes()
3de7e4ba3882 locking/rtmutex: Fix the preprocessor logic with normal #ifdef #else #endif
a4d638c4b411 locking/rwsem: Make owner store task pointer of last owning reader
fcfc6c9a903f locking/rwsem: Exit read lock slowpath if queue empty & no writer
ec6ebc6fc032 locking/mutex: Fix mutex debug call and ww_mutex documentation
ec10016199eb lockdep: Use this_cpu_ptr instead of get_cpu_var stats
7367d02cc659 locking/rtmutex: Allow specifying a subclass for nested locking
93a0fb30180b locking: Implement an algorithm choice for Wound-Wait mutexes
6fae5149a30f locking: WW mutex cleanup
eb5e2a91834c locking/rwsem: Fix up_read_non_owner() warning with DEBUG_RWSEMS
c0dbc103ba48 locking/rwsem: Simplify the is-owner-spinnable checks
c82ae2554a0e locking/percpu-rwsem: Annotate rwsem ownership transfer by setting RWSEM_OWNER_UNKNOWN
2d024d91413a locking/rwsem: Add a new RWSEM_ANONYMOUSLY_OWNED flag
5c00867db763 locking/lockdep: Move sanity check to inside lockdep_print_held_locks()
03c6e9e16a80 locking/lockdep: Use for_each_process_thread() for debug_show_all_locks()
c95155f15ca0 locking/qspinlock: Remove duplicate clear_pending() function from PV code
a7cf67c853d3 locking/qspinlock: Add stat tracking for pending vs. slowpath
37a885b0d51a locking/qspinlock: Use try_cmpxchg() instead of cmpxchg() when locking
77538842ff82 locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
6684cf0f0804 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
b9cf67318ef3 locking/mcs: Use smp_cond_load_acquire() in MCS spin loop
e4039a9b96db locking/qspinlock: Use atomic_cond_read_acquire()
01ba439b534c locking/qspinlock: Kill cmpxchg() loop when claiming lock from head of queue
5700083a5b66 locking/qspinlock: Remove unbounded cmpxchg() loop from locking slowpath
947fc5b03bbf locking/qspinlock: Bound spinning on pending->locked transition in slowpath
4e9b71275f17 locking/qspinlock: Merge 'struct __qspinlock' into 'struct qspinlock'
4ae021c9ce91 locking/qspinlock: Move __ARCH_SPIN_LOCK_UNLOCKED to qspinlock_types.h
d0b59dc1e95e locking/rwsem: Add DEBUG_RWSEMS to look for lock/unlock mismatches
8da32905f09a lockdep: Make the lock debug output more useful
c0279d8da979 locking/rtmutex: Handle non enqueued waiters gracefully in remove_waiter()
ef2456b38d7f locking/mutex: Improve documentation
67909ab671ef rtmutex: Make rt_mutex_futex_unlock() safe for irq-off callsites
fb13223a729d rcu: Suppress lockdep false-positive ->boost_mtx complaints
7cca5808bebc locking/lockdep: Show unadorned pointers
8c2197321b6c locking/qspinlock: Ensure node is initialised before updating prev->next
1f439356d411 locking/lockdep: Avoid triggering hardlockup from debug_show_all_locks()
12d30da26a18 lockdep: Make lockdep checking constant
7c4bd42fd3f2 lockdep: Assign lock keys on registration
77bd5fa25974 futex: Avoid violating the 10th rule of futex
c23f6ec15a98 locking/lockdep: Remove the cross-release locking checks
f7ae691096b9 locking/core: Remove break_lock field when CONFIG_GENERIC_LOCKBREAK=y
f4bc308bb391 locking/core: Fix deadlock during boot on systems with GENERIC_LOCKBREAK
6298767fc743 locking/lockdep: Fix possible NULL deref
eeec8227781d locking: Remove smp_read_barrier_depends() from queued_spin_lock_slowpath()
306054c6139a locking/pvqspinlock: Implement hybrid PV queued/unfair locks
c8c65e54143b locking/rwlocks: Fix comments
bafaca9dceb2 locking: rtmutex: DEFINE_WAKE_Q -> WAKE_Q
e12ceea44cfb ALSA: seq: Align temporary re-locking with irqsave version
cc562560b400 ipc: Replace spin_unlock_wait() with lock/unlock pair
335d66236eed task_work: Replace spin_unlock_wait() with lock/unlock pair
38b2cfdf5f68 locking/spinlock: Update spin_unlock_wait() users
0bf424cd04ee completion: Replace spin_unlock_wait() with lock/unlock pair
0c2a7ad2d0b3 exit: Replace spin_unlock_wait() with lock/unlock pair
67f7436530c3 rcuwait: Annotate task_struct with __rcu
236c97015fd7 sched/wait, rcuwait: Fix typo in comment
74b4f034c754 sched/wait, RCU: Introduce rcuwait machinery
2b9a6af1bdcf sched/api: Introduce task_rcu_dereference() and try_get_task_struct()
36bf2b2e7223 init: Kconfig: Don't use imply
e39d2eeb5d67 locking/lockdep: Introduce CONFIG_BOOTPARAM_LOCKDEP_CROSSRELEASE_FULLSTACK=y
1e804ba10e38 locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE and CONFIG_LOCKDEP_COMPLETIONS truly non-interactive
5866ac3191cd locking/lockdep: Rename CONFIG_LOCKDEP_COMPLETE to CONFIG_LOCKDEP_COMPLETIONS
f151ba633e8d locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE part of CONFIG_PROVE_LOCKING
e5b1cca9fe9e locking/lockdep: Apply crossrelease to completions
944a6e751c69 sched/completions: Fix complete_all() semantics
dab8195c1c5f locking/lockdep: Add a boot parameter allowing unwind in cross-release and disable it by default
e7f88fed0de6 locking/qrwlock: Prevent slowpath writers getting held up by fastpath
c176923c29ba locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
1e018bc267bc locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'
2ea15ef2e606 locking/qrwlock: Fix write unlock bug on big endian systems
45da9a81c742 locking/core: Remove {read,spin,write}_can_lock()
882266fabf60 locking/rwsem: Add down_read_killable()
58e7a861bdc1 locking/lockdep: Fix stacktrace mess
bb1f0339dc1f locking/rtmutex: replace top-waiter and pi_waiters leftmost caching
e630b85cc705 locking/pvqspinlock: Relax cmpxchg's to improve performance on some architectures
35a52847433b locking/lockdep: Untangle xhlock history save/restore from task independence
8994326ca2d4 locking/lockdep: Fix workqueue crossrelease annotation
5b5ef73ed432 locking/lockdep: Explicitly initialize wq_barrier::done::map
366b20724c56 lockdep: make MAX_LOCKDEP_SUBCLASSES unconditionally visible
ae7bad265526 locking: Remove spin_unlock_wait() generic definitions
af91c4b35b20 locking/lockdep: Fix the rollback and overwrite detection logic in crossrelease
0045abf87340 locking/lockdep: Add a comment about crossrelease_hist_end() in lockdep_sys_exit()
f085680e1c4c locking/lockdep: Make print_circular_bug() aware of crossrelease
5441719212c0 locking/lockdep: Handle non(or multi)-acquisition of a crosslock
e500b8e8ac47 locking/lockdep: Detect and handle hist_lock ring buffer overwrite
8b2202ff69c3 locking/lockdep: Implement the 'crossrelease' feature
1525435dc422 locking/lockdep: Make check_prev_add() able to handle external stack_trace
81be2e693411 locking/lockdep: Change the meaning of check_prev_add()'s return value
7c460ee40596 locking/lockdep: Add a function building a chain between two classes
35e212fd31cd locking/lockdep: Refactor lookup_chain_cache()
1da5a4110e9c locking/lockdep: Avoid creating redundant links
cef82a92e03b locking/rwsem-xadd: Add killable versions of rwsem_down_read_failed()
9a6e5aabc4f1 locking/rwsem-spinlock: Add killable versions of __down_read()
4c48a59e1bfe futex: Allow for compiling out PI support
789d08fb4fc5 locking/rtmutex: Remove unnecessary priority adjustment
ea6b654f98fa locking/qspinlock: Explicitly include asm/prefetch.h
c88adc20dc5f locking/rwsem-spinlock: Fix EINTR branch in __down_write_common()
e5a6d5a4b007 locking/rtmutex: Don't initialize lockdep when not required
8853b8f97ee6 lockdep: Use consistent printing primitives
340bb3470e15 rt_mutex: Add lockdep annotations
5f898c9a7bfe kernel/locking: Fix compile error with qrwlock.c
bf53174acf21 futex,rt_mutex: Fix rt_mutex_cleanup_proxy_lock()
c425ffcd81c8 mutex, futex: adjust kernel-doc markups to generate ReST
36a94d2c239e lockdep: teach lockdep about memalloc_noio_save
5828839fcaa2 lockdep: Use "WARNING" tag on lockdep splats
e51b58ea62c9 sparc64: Use LOCKDEP_SMALL, not PROVE_LOCKING_SMALL
ac4ca303fcb4 rtmutex: Plug preempt count leak in rt_mutex_futex_unlock()
1a66a8bb5da3 rtmutex: Fix more prio comparisons
e1397e19b02a rtmutex: Fix PI chain order integrity
9e9a5f5f3ede sched/rtmutex: Refactor rt_mutex_setprio()
53b8778bb6f4 rtmutex: Clean up
847882834e72 sched/deadline/rtmutex: Dont miss the dl_runtime/dl_period update
6849cbe8d950 sched/rtmutex/deadline: Fix a PI crash for deadline tasks
f04912a76013 rtmutex: Deboost before waking up the top waiter
c6e0235dd475 futex: Drop hb->lock before enqueueing on the rtmutex
1129496f570a futex: Rework futex_lock_pi() to use rt_mutex_*_proxy_lock()
10849eed0f4b futex: Pull rt_mutex_futex_unlock() out from under hb->lock
7962e1cc46d1 futex: Rework inconsistent rt_mutex/futex_q state
21f9e430573d futex: Cleanup refcounting
bdc7c3a002a6 futex: Change locking rules
a62d4c6ebb9e futex: Use smp_store_release() in mark_wake_futex()
18d7151e3770 futex: Cleanup variable names for futex_top_waiter()
366fe2194d42 futex: Rename barrier references in ordering guarantees
e0d437d26576 futex: Allow FUTEX_CLOCK_REALTIME with FUTEX_WAIT op
afb5839d979c futex: Cleanup the goto confusion in requeue_pi()
af22d728b3bc futex: Remove pointless put_pi_state calls in requeue()
55f4860c3e3b futex: Document pi_state refcounting in requeue code
d64867bea6b1 futex: Rename free_pi_state() to put_pi_state()
883438b377c9 futex,rt_mutex: Introduce rt_mutex_init_waiter()
5aa8cd077a87 futex,rt_mutex: Provide futex specific rt_mutex API
14e60dff1748 futex: Remove rt_mutex_deadlock_account_*()
9db46df0b1c3 locking/lockdep: Handle statically initialized PER_CPU locks properly
ba331df4893d locking/lockdep: Add new check to lock_downgrade()
0b123be0a9e4 locking/lockdep: Factor out the validate_held_lock() helper function
c3cf69a676ad locking/lockdep: Factor out the find_held_lock() helper function
1fa17c2d9a7b locking/rwsem: Fix down_write_killable() for CONFIG_RWSEM_GENERIC_SPINLOCK=y
49b18d331a9d locking/spinlock/debug: Remove spinlock lockup detection code
4fed5431f132 lockdep: Fix incorrect condition to print bug msgs for MAX_LOCKDEP_CHAIN_HLOCKS
508d9f06a9c6 locking/mutex: Fix lockdep_assert_held() fail
ab71e9e7efb5 locking/rtmutex: Flip unlikely() branch to likely() in __rt_mutex_slowlock()
11eed0b80fe2 lockdep: Make RCU suspicious-access splats use pr_err
4530842dfbbc locking/rwsem: Reinit wake_q after use
678e2b6b0890 locking/mutex, sched/wait: Add mutex_lock_io()
4f723b793efc locking/mutex: Initialize mutex_waiter::ww_ctx with poison when debugging
7bcf5c860cd4 locking/ww_mutex: Optimize ww-mutexes by yielding to other waiters from optimistic spin
3c08f52166ba locking/ww_mutex: Re-check ww->ctx in the inner optimistic spin loop
ac7c46f35cf1 locking/mutex: Improve inlining
a4d4b1f1f5bb locking/ww_mutex: Optimize ww-mutexes by waking at most one waiter for backoff when acquiring the lock
747fbd28337b locking/ww_mutex: Notify waiters that have to back off while adding tasks to wait list
4401af215eac locking/ww_mutex: Add waiters in stamp order
447f48509bed locking/ww_mutex: Remove the __ww_mutex_lock*() inline wrappers
c079f536fc9c locking/ww_mutex: Set use_ww_ctx even when locking without a context
2428f9481f84 locking/ww_mutex: Extract stamp comparison to __ww_mutex_stamp_after()
343070f54ae6 locking/mutex: Fix mutex handoff
8f405070e08a locking/percpu-rwsem: Replace waitqueue with rcuwait
843d00e841aa sched/core: Remove set_task_state()
76dd02e048bc kernel/locking: Compute 'current' directly
2238b0248a97 locking/pvqspinlock: Don't wait if vCPU is preempted
45a717a71339 locking/spinlocks: Remove the unused spin_lock_bh_nested() API
075c20d10bb8 msm: kgsl Rework mutex::owner inside adreno_dispatcher_idle()
29c8dbe12c57 locking/barriers, arch/arm64: Implement LDXR+WFE based smp_cond_load_acquire()
c1905bfe3cb2 locking/atomic: Introduce atomic_try_cmpxchg()
8fef2a4c8ca4 locking/atomic, arch/arm64: Implement atomic{,64}_fetch_{add,sub,and,andnot,or,xor}{,_relaxed,_acquire,_release}()
d1bfab9a4236 locking/mutex: Optimize __mutex_trylock_fast()
79ea244af0bc locking/barriers: Introduce smp_cond_load_relaxed() and atomic_cond_read_relaxed()
10e858b5d5d4 locking/barriers: Move smp_cond_load_acquire() to asm-generic/barrier.h
8dd64622be89 asm-generic: implement virt_xxx memory barriers
cd45a3255b40 locking/atomic: Add atomic_cond_read_acquire()
05d16e57fc94 locking/atomic: Introduce inc/dec variants for the atomic_fetch_$op() API
0b8450c3b652 locking/atomic: Implement atomic{,64,_long}_fetch_{add,sub,and,andnot,or,xor}{,_relaxed,_acquire,_release}()
93263f55734f locking/atomic: Fix atomic64_relaxed() bits
9d8665044cf0 atomics: Add test for atomic operations with _relaxed variants
aab203611908 include/asm-generic/atomic-long.h: force inlining of some atomic_long operations
f01ee7a4af90 locking/percpu-rwsem: Add DEFINE_STATIC_PERCPU_RWSEMand percpu_rwsem_assert_held()
155ebc22fd28 sched/core: Introduce the vcpu_is_preempted(cpu) interface
de8b2acb2fad fs/locks: Replace lg_local with a per-cpu spinlock
fe0d28aecc71 fs/locks: Replace lg_global with a percpu-rwsem
99f54629d23a lockdep: Fix report formatting
18d9ea9f8dae locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
f42f213a58c8 locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b70cb73fadaa locking/lockdep: Provide a type check for lock_is_held
0cd5bfbc998b locking/mutex: Break out of expensive busy-loop on {mutex,rwsem}_spin_on_owner() when owner vCPU is preempted
7783f1a7b6b4 locking/osq: Break out of spin-wait busy waiting loop for a preempted vCPU in osq_lock()
e09bcaa849e3 lockdep: Limit static allocations if PROVE_LOCKING_SMALL is defined
7f7d08061bac locking/core: Remove cpu_relax_lowlatency() users
0d8dd02ab852 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
f9751b33ad37 locking/mutex: Enable optimistic spinning of woken waiter
d6bfab5a1c1c locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
0670afa6bc37 locking/mutex: Restructure wait loop
b42d5f7a2c6a locking/mutex: Add lock handoff to avoid starvation
4d7e64584bfc locking/mutex: Rework mutex::owner
64c2db8ed4b0 locking/lglock: Remove lglock implementation
57beee26f16a locking/pv-qspinlock: Use cmpxchg_release() in __pv_queued_spin_unlock()
4c64862c0860 locking/rwsem: Scan the wait_list for readers only once
4cbcf2ace233 locking/rwsem: Remove a few useless comments
9acae4e244c0 locking/rwsem: Return void in __rwsem_mark_wake()
ff856347efa7 locking/pvstat: Separate wait_again and spurious wakeup stats
b4e5c0d9a7af locking/qspinlock: Improve readability
bfc4c6904a44 locking/pvqspinlock: Fix a bug in qstat_read()
02ee774dd590 locking/pvqspinlock: Fix double hash race
e048d84999a4 locking/qspinlock: Use __this_cpu_dec() instead of full-blown this_cpu_dec()
f15566801c1d locking/atomic, arch/rwsem: Employ atomic_long_fetch_add()
d13d5b9023f5 locking/atomic, arch/qrwlock: Employ atomic_fetch_add_acquire()
1ea22ecb654b locking/atomic: Remove the deprecated atomic_{set,clear}_mask() functions
f6600295f31e locking/barriers: Introduce smp_acquire__after_ctrl_dep()
4978329e36c0 locking/barriers: Replace smp_cond_acquire() with smp_cond_load_acquire()
cdbd62cb2655 locking/csd_lock: Use smp_cond_acquire() in csd_lock_wait()
c42e6d7965dd locking/csd_lock: Explicitly inline csd_lock*() helpers
ee2bb474d998 locking/rwsem: Streamline the rwsem_optimistic_spin() code
c82691ba4a60 locking/rwsem: Improve reader wakeup code
4e213d6e2fc4 locking/rwsem: Protect all writes to owner by WRITE_ONCE()
715c0b2c29a9 locking/rwsem: Add reader-owned state to the owner field
c87c354d9d37 locking/rwsem: Convert sem->count to 'atomic_long_t'
dced76820e4c locking/qspinlock: Add comments
f4c0c77f6a61 locking/qspinlock: Clarify xchg_tail() ordering
00d2bb27ab42 locking/rtmutex: Only warn once on a trylock from bad context
5e056409ef7f locking/lockdep: Use __jhash_mix() for iterate_chain_key()
3001abd76da6 locking/mutex: Set and clear owner using WRITE_ONCE()
93e2892b59a2 locking/rwsem: Optimize write lock by reducing operations in slowpath
6f5dd06f130e locking/rwsem: Rework zeroing reader waiter->task
6d9ec9716d3a locking/rwsem: Enable lockless waiter wakeup(s)
c2c206ff8ea0 add down_write_killable_nested()
475bfe19dba4 locking/rwsem: Fix down_write_killable()
866e94b0e438 locking/pvqspinlock: Robustify init_qspinlock_stat()
9a5a8212c0ba locking/pvqspinlock: Avoid double resetting of stats
353b9d0dbb10 lcoking/locktorture: Simplify the torture_runnable computation
db8714e8043f lockdep: Fix lock_chain::base size
68399cef57ba locking/lockdep: Fix ->irq_context calculation
cd2c864d2b54 locking/rwsem: Provide down_write_killable()
d2fafd38caae locking/pvqspinlock: Fix division by zero in qstat_read()
9a973c514640 locking/rwsem: Introduce basis for down_write_killable()
3b69ff7be04c locking/rwsem: Get rid of __down_write_nested()
c600b4f02ab1 locking/lockdep: Deinline register_lock_class(), save 2328 bytes
e6a6d466f11b locking/locktorture: Fix deboosting NULL pointer dereference
6f4d7b4420e8 locking/lockdep: Fix print_collision() unused warning
3aeaf7f828f9 locking/lockdep: Print chain_key collision information
45e52c1ab93a tags: Fix DEFINE_PER_CPU expansions
cfa5c0e28d2e locking/lockdep: Detect chain_key collisions
e196fbcfa109 locking/lockdep: Prevent chain_key collisions
2326699f1fdf locking/pvqspinlock: Enable slowpath locking count tracking
2039c1537dbb locking/qspinlock: Use smp_cond_acquire() in pending code
4eda9a119335 locking/pvqspinlock: Move lock stealing count tracking code into pv_queued_spin_steal_lock()
d932e86a490f locking/lockdep: Eliminate lockdep_init()
4ce27c54a5e7 locking/lockdep: Convert hash tables to hlists
15f5cd4ac9fe locking/lockdep: Fix stack trace caching logic
140e75c93202 rtmutex: Make wait_lock irq safe
325667aaddb0 locking/pvqspinlock: Queue node adaptive spinning
ec08bcc8fba3 locking/pvqspinlock: Allow limited lock stealing
07a74d5d9035 locking/pvqspinlock: Collect slowpath lock statistics
78edb2127301 locking, sched: Introduce smp_cond_acquire() and use it
a2bd313fc69c locking/pvqspinlock, x86: Optimize the PV unlock code path
a9fff531a9bf locking/qspinlock: Avoid redundant read of next pointer
1d8831367287 locking/qspinlock: Prefetch the next node cacheline
9d5255a1678f locking/qspinlock: Use _acquire/_release() versions of cmpxchg() & xchg()
08e24e2139f3 posix-timers: Use spin_lock_irq() in itimer_delete()

   * packages/apps/Settings/
53156d0a35 Settings: Use Evolution implementation for lockdown button
2608c2d263 Expose lockdown button in settings

   * packages/resources/devicesettings/
6f0205a Automatic translation import

   * packages/services/Telephony/
cfca66c3f Fix resource warnings.

=======================
     08-04-2019
=======================


   * device/essential/mata/
987dbaf2 Revert "Revert "mata: Convert bluetooth@1.0-impl to read QC MAC address""
d7d97925 Revert "Revert "mata: Import bluetooth@1.0-impl module""

   * kernel/essential/msm8998/
d6db54b0b91b iommu: msm: Sulterino force-pusherino

=======================
     08-03-2019
=======================


   * device/essential/mata/
0e3b97ff mata: sepolicy: Remove com.quicinc.cne* from hwservice_contexts
289f386a mata: sepolicy: Remove /data/vendor/misc/audio from file_contexts
ab71310e mata: Aosip-fy
957e95f3 mata: Remove (slightly broken) USB Gadget HAL for now
8acbf5ec mata: sepolicy: vendor: Add VT_CAM_INTERFCE to vendor_radio_prop group
d4cb656e mata: Add missing ownership/permission changes for /sys/class/graphics/fb3
4a8c7a3c mata: overlay: Lower cpu.idle value
62176a6e mata: Update props
6dd4fb3b mata: Update some props from CAF
b5ffd195 mata: overlay: Set screen off delay to 0

   * kernel/essential/msm8998/
cfd0224ecfb9 sched/core: Unify p->on_rq updates

   * packages/apps/SmartNav/
a16f932 Automatic translation import

   * vendor/essential/
afa5b6e Revert "mata: Import libtim_genoff from Wahoo"
4db6d13 Revert "mata: Import time_daemon from Wahoo"

   * vendor/themes/
0921539 Automatic translation import

=======================
     08-02-2019
=======================


   * device/essential/mata/
9151572d mata: Increase the TCP buffer size to 6MB
7fde2774 mata: Add option to compile kernel with KASAN
6f3b78dc mata: Update power profile to match P framework
20aed527 mata: Pin updated sensors.hal.tof.so

   * kernel/essential/msm8998/
5755ce484409 sched/core: Use load_avg for selecting idlest group
a158e3925691 sched/fair: Push rq lock pin/unpin into idle_balance()
34cb7a61ccad sched/fair: update_rq_clock after nr_running check in load balance path
c15939f353ae sched: Fix assert_clock_updated warning emitted during CPU isolation
3fa904deebaa sched/fair: Add missing update_rq_clock() call while pushing task
0a5cac4caa45 Revert "sched/fair: Fix PELT integrity for new groups"
4ec54517d8cc sched: rt: Fix CAF mismerge of 8623286 and ec888d4
d739f91c2a65 sched: deadline: Fix CAF mismerge of 8623286 and ec888d4
59578284eab8 sched/deadline: Add missing update_rq_clock() in dl_task_timer()
7ee431a84497 sched/deadline: Fix the intention to re-evalute tick dependency for offline CPU
99440fac305f sched/deadline: Fix lock pinning warning during CPU hotplug
c7754eee1846 genirq: Avoid summation loops for /proc/stat
d6b99cfcd9fa genirq: Robustify handle_percpu_devid_irq()
9a36c3ee7d9a sched: core: Fix yet another CAF mismerge of 8623286 and ec888d4
b059e54a125a hrtimer: Use irqsave/irqrestore around __run_hrtimer()
ac51f391167e sched/core: Add missing update_rq_clock() call in sched_move_task()
906ca328192b sched/core: Make sched_ttwu_pending() atomic in time
48639f676095 stop_machine: Remove stop_cpus_lock and lg_double_lock/unlock()
3949c698482e stop_machine: Use raw spinlocks
c80942b2b089 kernel: sched: Add missing ENQUEUE_NOCLOCK flag in set_user_nice()
ff9693b41c02 sched/core: Introduce set_next_task() helper for better code readability
98c6ce76087f sched/core: Fix rq lock pinning warning after call balance callbacks
6dc2db774004 sched: core: Update migration_call() to latest changes
509cf5d8f54e sched: fair: Add update_rq_clock before __update_cpu_load
fc26bf244907 sched/fair: Update rq clock before changing a task's CPU affinity
5d0a4e6a8e52 sched: core: Add missed ENQUEUE_NOCLOCK flag
480fd6eb1eb4 sched: fair: Remove double_(un)lock_balance fuckery from CAF
10ee7a56c216 Revert "sched: Fix racy invocation of fixup_busy_time via move_queued_task"
56b677a7f7ff sched/core: Fix double update_rq_clock) calls in attach_task()/detach_task()
071af3522235 sched/core: Add rq->lock wrappers
2b7cde829d42 sched/core: Fix update_rq_clock() splat on hotplug (and suspend/resume)
73ba30163db7 sched/fair: Restore previous rq_flags when migrating tasks in hotplug
0d35ecb1008a sched/cfs: Make util/load_avg more stable
0903b9fd4d28 sched/fair: Simplify wake_affine() for the single socket case
3ac91bfdf61d sched: tune: Convert locking to rq_flags
654f5e9e2949 sched/deadline: Update rq_clock of later_rq when pushing a task
d2a41728429a sched: deadline: Fix another CAF mismerge of 8623286 and ec888d4
1d14e891600d sched/core: Add {EN,DE}QUEUE_NOCLOCK flags
bc7a95268df8 sched/core: Add WARNING for multiple update_rq_clock() calls
d4d0282b3883 sched/core: Simplify helpers for rq clock update skip requests
13c9b25a8284 sched/rq_clock: Consolidate the ordering of the rq_clock methods
ba6b81437942 sched/core: Avoid double update_rq_clock() in move_queued_task()
71e42c05d017 sched/core: Simplify update_rq_clock() in __schedule()
e90f850fb91b sched/deadline: Make update_curr_dl() more accurate
be28cbadfb4a sched/core: Avoid obvious double update_rq_clock()
033085cd90fc sched/core: Add debugging code to catch missing update_rq_clock() calls
ef42b2828df8 sched/core: Add wrappers for lockdep_(un)pin_lock()
a5bdbfea7015 locking/lockdep, sched/core: Implement a better lock pinning scheme
ab2d64a333a5 sched/core: Introduce 'struct rq_flags'
f8b2c1302fb0 sched/core: Reset RQCF_ACT_SKIP before unpinning rq->lock
fa9de067fcc3 sched: rt: fix CAF mismerge of 8623286277c31443d38a024de85adab973498664 and ec888d46d8993b2bf205ed375e538a3819c23659
6d7b61caf0da msm: mdss: Fix uninitialized vsync_time in mdss_mdp_cmd_pingpong_done
34a5a8498aa8 qcacld-3.0: Remove unused parameter from process_rx_public_action_frame
c0428eb3d690 msm: sps: Fix uninitialized result usage when an invalid IRQ is found
114eccf8e948 arm64: arch_timer: simplify accessors
3a5fa5c91d71 ANDROID: binder: correct the cmd print for BINDER_WORK_RETURN_ERROR
5de9d62c1d7c binder: fix incorrect cmd to binder_stat_br
64e723f6757c fib_rules: Fix payload calculation
84a67e91f4a3 net/ipv4: fib_trie: Avoid cryptic ternary expressions
72490a72e6b0 lib: Kconfig.debug: Remove debug dependency from SCHED_STACK_END_CHECK
7d2c8ddfba5f ANDROID: sdcardfs: Allocate temporary name buffer on the stack
4aa0d86de7f3 kobject_uevent: Allocate environment buffer on the stack
2b876b2f2d3a ion: system_heap: Speed up system heap allocations
c7c330d07c4e ANDROID: crypto: heh - Avoid dynamically allocating memory for keys
9049fdab8563 ext4: Avoid dynamically allocating memory in ext4_ext_remove_space
41d641d609b7 xattr: Avoid dynamically allocating memory in getxattr
ec168e5ff9ad binfmt_elf: Don't allocate memory dynamically in load_elf_binary
3e700c53586b staging: sync: Use an on-stack allocation for fence info ioctl
45d2dbbbe714 media: v4l2-ioctl: Use larger on-stack video copy buffers
1d14cca31680 msm: camera: Optimize memory allocation for small buffers
8772da549de4 msm: kgsl: Don't allocate memory dynamically for temp command buffers
3c09250f9e10 msm: mdss: Don't allocate memory dynamically for small layer buffers
2862f8bc5615 ext4 crypto: Use a larger on-stack file name buffer
6e73d99f8f52 selinux: Avoid dynamic memory allocation for small context buffers
98402e2d72e5 kernfs: Avoid dynamic memory allocation for small write buffers
e16e25e8af17 msm: kgsl: Avoid dynamically allocating small command buffers
49f64de4a6a4 Revert "msm: mdss: Don't allocate memory dynamically for small layer buffers"
a8b6d099f757 Defconfig: Update from Sulten

=======================
     08-01-2019
=======================


   * frameworks/base/
0d6768f8504 Double tap to sleep on statusbar [1/2]
812eb96fd41 Double tap to sleep on lockscreen [1/2]
11ca577557b Revert "SystemUI: add double tap to sleep gesture"
2704efcbb41 base: Add DeviceUtils from Omni
86f5423ce19 base: add vibrate util methods
4b7bc0d314d base: incall vibration options [1/3]
a5f899703db Revert "fwb: Incall vibration options [1/3]"

   * hardware/qcom/audio-caf/sm8150/
b78a05b7 audio: Add missing includes
c384b972 audio: Depend on libtinycompress
e6b97220 Merge tag 'LA.UM.7.1.r1-15600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/hardware/qcom/audio into pie-caf

   * hardware/qcom/display-caf/sm8150/
9580392c Merge tag 'LA.UM.7.1.r1-15600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/hardware/qcom/display into pie-caf

   * hardware/qcom/media-caf/sm8150/
9016bbbb Merge tag 'LA.UM.7.1.r1-15600-sm8150.0' of https://source.codeaurora.org/quic/la/platform/hardware/qcom/media into pie-caf

   * manifest/
e90efbb manifest: Track Telecomm

   * packages/apps/Evolution/
ce6c208 In-call vibrations: Add summaries
d72787e incall vibration options [3/3]

   * packages/apps/Settings/
193225e222 Revert "Settings: Add double tap to sleep"
50f55f98c8 Settings: Add Evolution X Version to FirmwareDialog
7e297efc96 Revert "Settings: Incall vibration option [3/3]"

   * packages/services/Telecomm/
a75f7461 Telecomm: Update code for in-call vibrations
d8eaf627 incall vibration options [2/3]
9fc652b7 Revert "Telecomm: Incall vibration option [2/3]"

   * packages/services/Telephony/
1d82b5ff1 phone: Add option for setting device phone number (squashed)

   * system/sepolicy/
9632c0d9 Relax some neverallow rules
4731eb3e more mmaps
f9d96091 Allow mmap for vendor_init
75cfc1ae isolated_app: add mmaps
9a096927 sepolicy: Add mmap for profman

=======================
     07-31-2019
=======================


   * frameworks/av/
f64974ea5 media: Add support for up to level 6.2 for AVC

   * frameworks/base/
52feba6640c Support enforcing a minimum delay between notification sounds of an app.
75ca9699b9b Import translations for Typographic Clock
19f7f2a7726 Automatic translation import
8b51a5da53f Revert "[1/2] services: allow to force "never" mode for display cutout"

   * hardware/qcom/audio-caf/msm8960/
b49d4dcf0 hal: Add support for voice calls on Fusion3 platforms
d50691ca0 audio-hw: Restrict voice_start_usecase only for 1 call at a time
b89a37db8 hal: Fix no audio during voice call with voip in background
ab3534805 hal: fix no sound issue in voice call

   * kernel/essential/msm8998/
32264b16ef02 Merge "msm: kgsl: Fix race condition between drawobj and context destroy" into kernel.lnx.4.4.r34-rel
705fe99bb326 msm: ais: jpegdma: Added missing lock for dqbuf and streamon
79f5d13e84ed msm: kgsl: Fix race condition between drawobj and context destroy

   * packages/apps/Evolution/
ae66474 Revert "Evolution: allow to force never mode for display cutout [2/2]"

   * packages/apps/Settings/
297361aab9 Add setup UI for minimum delay between an app's notification sounds
efa33b5270 Settings: Preserve sound timeout pref when showing legacy notification settings

   * system/netd/
12c5549 NetD : Allow passing in interface names for vpn app restriction

   * vendor/gapps/
8197231 Update gapps

   * vendor/pixelstyle/
87f16fd Update gapps

=======================
     07-30-2019
=======================


   * build/make/
cd5929289 build: Add ability to use preinstalled vendor.img

   * frameworks/base/
0eb8b25c4cb [SQUASH] Remove lockscreen charging animation

   * kernel/essential/msm8998/
f73131740984 Merge 0f6eb98b7b9cfe558d6c14805ee2aa42db7ebaa1 on remote branch
df679aba581f ANDROID: sched/fair: correct pelt load information in sched-pelt.h
813e6a1ece3e FROMLIST: sched/fair: add support to tune PELT ramp/decay timings
7fe373701a22 sched/fair: Move the PELT constants into a generated header
fc90165b16ce sched/fair: Fix comments
32a7d4058e4f sched/fair: Fix corner case in __accumulate_sum()
e31a7a7982fe sched/fair: Optimize ___update_sched_avg()
7a051e000f9b sched/fair: Optimize sum computation with a lookup table
e1fe082ff05f sched/fair: Explicitly generate __update_load_avg() instances
38122f9e5bb8 BACKPORT: sched/fair: Fix cpu_util_wake() for 'execl' type  workloads
ce31fe172e62 sched/fair: Update util_est only on util_avg updates
b302a6ec09a6 sched/fair: Use util_est in LB and WU paths
a52f016d97f2 Revert "sched/fair: Optimize sum computation with a lookup table"
403361cec7ee Revert "sched/fair: Explicitly generate __update_load_avg() instances"
8cb30fe29948 Revert "sched/fair: Optimize ___update_sched_avg()"
51d5fd9a3eb7 Revert "sched/fair: Fix corner case in __accumulate_sum()"
89b855f94da6 Revert "sched/fair: Fix comments"
490adb84e991 Revert "sched/fair: Move the PELT constants into a generated header"
e250f234b2cb Revert "FROMLIST: sched/fair: add support to tune PELT ramp/decay timings"
cc31e3312ea0 Revert "ANDROID: sched/fair: correct pelt load information in sched-pelt.h"
82a92c3c8320 Revert "ANDROID: sched/fair: Cleanup cpu_util{_wake}()"
03247cf26656 Revert "BACKPORT: sched/fair: Use util_est in LB and WU paths"
f4350a6e873a Revert "BACKPORT: sched/fair: Update util_est only on util_avg updates"
9c05405ce114 Revert "BACKPORT: sched/fair: Fix cpu_util_wake() for 'execl' type workloads"
2df9c3aa9d59 sched/fair: Don't push cfs_bandwith slack timers forward
f367644be5dd sched/fair: Make sync_entity_load_avg() and remove_entity_load_avg() static
a8050d39dbb9 sched/fair: Don't increase sd->balance_interval on newidle balance
f8f1a868e4cd sched/fair: Fix bandwidth timer clock drift condition
dc8e4ded8cd9 sched/fair: Advance global expiration when period timer is restarted
498accb7c3db sched/core: Fix preempt warning in ttwu
7b6a42b7972d sched/core: Optimize try_to_wake_up() for local wakeups
6333d140ebdb sched/core: Add __sched tag for io_schedule()
b808b8f59dd6 sched: Factor out nr_iowait and nr_iowait_cpu
953fef2a14dc sched/core: Use READ_ONCE()/WRITE_ONCE() in move_queued_task()/task_rq_lock()
cedf668ef65b iommu: msm: Update to https://github.com/kerneltoast/android_kernel_google_wahoo/commit/fc4b4ea3ebf9ad237da6bd355994791632ccfb68
0f5d13bfc470 input: misc: hbtp: Double the already boosted pressure vallue
5fbf546f09be sched: set number of iterations to h_nr_running
d74cf2040d17 sched/rt: Make update_curr_rt() more accurate
875dc2af2ad9 cpuidle: lpm-levels: Add back clock_debug_print_enabled
3859b85db23c sched/fair, cpumask: Export for_each_cpu_wrap()
eb4730cb052e sched/topology: Fix building of overlapping sched-groups
96e26aa217c2 sched/core: Get rid of 'cpu' argument in wq_worker_sleeping()
d419bb3b0148 sched/core / kcov: avoid kcov_area during task switch
fcc8b596438c sched/core: Fix incorrect utilization accounting when switching to fair class
a4f6dcde645d nmi_backtrace: generate one-line reports for idle cpus
e83bf542b70c FROMLIST: sched/fair: Change prefer_sibling type to bool
fd84801134f6 sched/fair: Fix CPU capacity updates in update_cpu_capacity()
1a389af808f7 sched: ignore task_h_load for CPU_NEWLY_IDLE
4ad5f1ee55d4 sched/fair: Remove 'cpu_busy' parameter from update_next_balance()
127430918f52 sched: set loop_max after rq lock is taken
4a647b857a9a sched: check pinned tasks before balance
0f23d69124d0 UPSTREAM: sched/fair: Fix FTQ noise bench regression
a64076d2e224 PM / QoS: Fix memory leak on resume_latency.notifiers
79404b331b73 cpuidle: menu: Avoid overflows when computing variance
a37fbf7accbd cpuidle: menu: Remove get_loadavg() from the performance multiplier
852e9657796c cpu: clean up register_cpu func
40b21f84c442 cpuidle: menu: help gcc generate slightly better code
5c96d06356af cpuidle: menu: avoid expensive square root computation
94161a8fa329 cpuidle: menu: Avoid pointless checks in menu_select()

   * manifest/
ca51f21 manifest: Drop frameworks_evolution

   * packages/apps/Evolution/
fc84933 Revert "Add toggle for charging animation [2/2]"

=======================
     07-29-2019
=======================


   * frameworks/base/
5cb40d453ac Fix sim pin on DSDS
41b27ed4665 Dismiss SIM lock page after correct SIM
968f6172fb4 When data switches during voice call, make sure signal bar updates it.
7b618466405 Update navigation bar upon change of display density
fa9aaaf4614 Unable to input PIN with hardware keyboard
067225738f8 Remove unnecessary right padding from time picker

   * manifest/
5e7b776 manifest: Track Evolution X gapps

=======================
     07-28-2019
=======================


   * frameworks/av/
98450463a CameraService: Allow new msg types for OP cam
727f398c7 CameraService: Fix openCamera denial for OP cam

   * frameworks/base/
d1974e66eec OP Gestures: add swipe start height setting [1/2]
14c9df6fd1c jni: Fix improper call to createFromExisting()
19fc06699b4 Default the network location provider to none
5d142af8b7b combo issue when location reported by providers do not come with extras
3e2e9bd6fd5 NLP Combo feature
d12b9386d20 Fix to register the receiver for all users
1bd12402b1c Audio assets: add NFC sounds
186a2eaa4ff MediaCodecInfo: Add support for level 6.2
3bf1ae320fe FB: Clean up oneplus camera support
290a8ef18b9 FB: Add oneplus camera support

   * packages/apps/SmartNavSettings/
b1ff5e5 OP Gestures: add swipe start height setting [2/2]

